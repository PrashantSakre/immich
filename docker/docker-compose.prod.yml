version: "3.8"

name: immich-prod

x-server-build: &server-common
  image: immich-server:latest
  build:
    context: ../
    dockerfile: server/Dockerfile
  volumes:
    - ${UPLOAD_LOCATION}/photos:/usr/src/app/upload
    - /etc/localtime:/etc/localtime:ro
  env_file:
    - .env
  restart: always

services:
  immich-server:
    container_name: immich_server
    command: [ "./start-server.sh" ]
    <<: *server-common
    ports:
      - 2283:3001
    depends_on:
      - redis
      - database
      - typesense

  immich-microservices:
    container_name: immich_microservices
    command: [ "./start-microservices.sh" ]
    <<: *server-common
    # extends:
    #   file: hwaccel.yml
    #   service: hwaccel
    depends_on:
      - redis
      - database
      - immich-server

  immich-machine-learning:
    container_name: immich_machine_learning
    image: immich-machine-learning:latest
    build:
      context: ../machine-learning
      dockerfile: Dockerfile
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    restart: always

  redis:
    container_name: immich_redis
    image: redis:6.2-alpine@sha256:3995fe6ea6a619313e31046bd3c8643f9e70f8f2b294ff82659d409b47d06abb
    restart: always

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.1.8-amd64
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    volumes:
      - ${UPLOAD_LOCATION}/postgres:/var/lib/postgresql/data
    restart: always

volumes:
  model-cache:
